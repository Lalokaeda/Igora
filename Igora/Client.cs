//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Igora
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;

    public partial class Client
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Client()
        {
            this.Orders = new HashSet<Order>();
        }
    
        public int Id { get; set; }
        public string Surname { get; set; }
        public string Name { get; set; }
        public string Patronymic { get; set; }
        public string Passport { get; set; }
        public System.DateTime BirthDate { get; set; }
        public string Address { get; set; }
        public string Email { get; set; }

        private string _password;
        public string Password 
        { get
            {
                return _password;
            }
            set 
            { 
                _password = value;
            }
        }
        public string PhoneNum { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order> Orders { get; set; }

        public string ShortName
        {
            get
            {
                if (Patronymic == null)
                    return Surname + " " + Name.Substring(0, 1) + ".";
                else
                    return Surname + " " + Name.Substring(0, 1) + ". " + Patronymic.Substring(0, 1) + ".";
            }
        }

        public async void GeneratePassword()
        {
            Random random = new Random();
            List<Client> client = new List<Client>();
            client = IgoraEntities.GetContext().Clients.ToList();
                do
                {
                    _password = "cl" + random.Next(10000, 99999).ToString();
                } while (client.Any(p => p.Password.Equals(_password)));
            await Task.Delay(10);
        }
    }
}
